SELECT U.ID, U.NAME, T.SEAT_NUMBER
FROM USERS U
JOIN TICKETS T ON U.ID = T.USER_ID
JOIN TRAINS TR ON T.TRAIN_ID = TR.ID
WHERE TR.ID = 11
ORDER BY T.SEAT_NUMBER ASC;

SELECT U.ID, U.NAME, COUNT(T.ID) AS TRAINS_COUNT, SUM(TR.DISTANCE) AS TOTAL_DISTANCE
FROM USERS U
JOIN TICKETS T ON U.ID = T.USER_ID
JOIN TRAINS TR ON T.TRAIN_ID = TR.ID
GROUP BY U.ID
ORDER BY TOTAL_DISTANCE DESC
LIMIT 6;

SELECT ID, TYPE, SRC_STN, DST_STN, TIMEDIFF(ARRIVAL, DEPARTURE) AS TRAVEL_TIME
FROM TRAINS
ORDER BY TRAVEL_TIME DESC
LIMIT 6;

SELECT TR.TYPE, TR.SRC_STN, TR.DST_STN, TR.DEPARTURE, TR.ARRIVAL, 
       ROUND((TY.FARE_RATE * TR.DISTANCE / 10), -2) AS FARE
FROM TRAINS TR
JOIN TYPES TY ON TR.TYPE = TY.ID
ORDER BY TR.DEPARTURE ASC;

SELECT TR.ID, TR.TYPE, TR.SRC_STN, TR.DST_STN, COUNT(TK.ID) AS OCCUPIED, TY.MAX_SEATS AS MAXIMUM
FROM TRAINS TR
JOIN TICKETS TK ON TR.ID = TK.TRAIN_ID
JOIN TYPES TY ON TR.TYPE = TY.ID
GROUP BY TR.ID
HAVING OCCUPIED > 0
ORDER BY TR.ID ASC;

SELECT TR.ID, TR.TYPE, TR.SRC_STN, TR.DST_STN, COALESCE(SUB.OCCUPIED, 0) AS OCCUPIED, TY.MAX_SEATS AS MAXIMUM
FROM TRAINS TR
LEFT JOIN (SELECT TRAIN_ID, COUNT(*) AS OCCUPIED FROM TICKETS GROUP BY TRAIN_ID) SUB ON TR.ID = SUB.TRAIN_ID
JOIN TYPES TY ON TR.TYPE = TY.ID
ORDER BY TR.ID ASC;
